general:
{
	# Results directory
	resDir = "../results/";
	specDir = "../results/spectrum/";
	plotDir = "../results/plot/";
 	fileFormat = "bin"; 
	#fileFormat = "txt";
};

model:	
{
	# Case name to define files:
	caseName = "OU_2d";
	# Dimension of the model (time series):
	dim = 2;
	# Matrix for linear drift
	drift = [0.196, 0.513, -0.513, -0.396];
	# Diffusion matrix
	diffusion = [1., 0., 0., 1.];
};

simulation:
{
	# Initial constant state:
	initState = [0., 0.];
	# Time series length without spinup
	LCut = 1.e6;
	# Spinup duration:
 	spinup = 1.e5;
	# Time step of integration
 	dt = 0.001;
	# Time step between prints
	printStep = 0.05;
	# Output file format:
};

observable:
{
	# Components of the time series:
	components = [0, 1];
	# Eventual delay of each component to embed (days):
	embeddingDays = [0., 0.];
};

grid:
{
#	readGridMem = false;
	readGridMem = true;
	# Number of boxes in each direction and stand. dev. to span away from the mean state:
#	nx = [100, 100];
	nx = [200, 200];
	nSTDLow = [5., 5.];
	nSTDHigh = [5., 5.];
};

transfer:
{
	# Lags for the transition matrix:
#	tauRng = [0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5, 0.6, 0.7, 0.8, 0.9, 1.];
	tauRng = [0.1];
	stationary = true;
};

spectrum:
{
	# Number of eigenvalues to look for:
#	nev = 50;
	nev = 200;
	maxit = 1000;
	tol = 1.e-15
	getForwardEigenvectors = true;
	getBackwardEigenvectors = true;
	makeBiorthonormal = true;
};

stat:
{
	# Components to use as observables:
	idxf = 0;
	idxg = 0;
	# Maximum lag used to calculate the correlation function:
	lagMax = 100;
	# Multi-taper window used to calculate periodograms:
	chunkWidth = 1000;
	# Limits for periodogram plot:
	angFreqMax = 3.;
	rateMax = 0.5;
	powerMin = 5.e-4;
	powerMax = 1.e1;
};
