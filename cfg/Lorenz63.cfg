general:
{
	# Results directory
	resDir = "../results/";
	specDir = "../results/spectrum/";
	plotDir = "../results/plot/";
};

model:	
{
	# Case name to define files:
	caseName = "Lorenz63";
	# Dimension of the model (time series):
	dim = 3;
	# Field parameters
	rho = 28.;
	sigma = 10.;
	beta = 2.6666666666666665;
};

simulation:
{
	# Initial constant state:
	initState = [1., 1., 1.];
	# Time series length without spinup
#	LCut = 1.e6;
	LCut = 1.e5;
	# Spinup duration:
 	spinup = 1.e3;
	# Time step of integration
 	dt = 1.e-4;
# 	dt = 1.e-5;
	# Time step between prints
#	printStep = 1.e-2;
	printStep = 1.e-3;
	# Output file format:
 	file_format = "bin";
	#file_format = "txt";
};

observable:
{
	# Components of the time series:
	components = [0, 1, 2];
	# Eventual delay of each component to embed (days):
	embeddingDays = [0., 0., 0.];
};

grid:
{
	readGridMem = false;
#	readGridMem = true;
	# Number of boxes in each direction and stand. dev. to span away from the mean state:
#	nx = [10, 10, 10];	    
	nx = [20, 20, 20];
#	nx = [50, 50, 50];
};

transfer:
{
	# Lags for the transition matrix:
#	tauRng = [0.01, 0.05, 0.1, 0.5, 1.];
	tauRng = [0.001, 0.005, 0.01, 0.05, 0.1, 0.5, 1.];
	stationary = true;
};

spectrum:
{
	# Number of eigenvalues to look for:
	nev = 50;
#	nev = 200;
	maxit = 1000;
	tol = 1.e-15
	getForwardEigenvectors = true;
	getBackwardEigenvectors = true;
	makeBiorthonormal = true;
};

stat:
{
	# Lag of the transition matrix for which to plot
	tauPlot = 0.1
	# Components to use as observables:
#	idxf = 0;
#	idxg = 0;
#	idxf = 1;
#	idxg = 1;
	idxf = 2;
	idxg = 2;
	# Maximum lag used to calculate the correlation function:
	lagMax = 5;
	# Multi-taper window used to calculate periodograms:
	chunkWidth = 50;
	# Limits for periodogram plot:
	angFreqMax = 20.;
	rateMax = 20;
	powerMin = 1.e-4;
	powerMax = 1.e0;
};
